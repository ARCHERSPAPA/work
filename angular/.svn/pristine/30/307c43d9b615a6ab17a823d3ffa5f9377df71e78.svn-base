import { Injectable } from '@angular/core';
import {RequestService} from "../../service/request.service";
import {Messages} from "../../model/msg";

@Injectable({
  providedIn: 'root'
})
export class ItemBasicService {

  constructor(private req:RequestService) { }

    /**
     * 根据不同类型来查询类别数据
     * @param {number} type （1：主材，2：辅材；3：软材）
     * @returns {Promise<any>}
     */
  getCategoryByType(type:number):Promise<any>{
    return new Promise((resolve,reject) =>{
      this.req.doPost({
         url:"getMaterialCategory",
         data:{type: type},
         success:(res =>{
           if(res && res.code == 200){
             resolve(res.data);
           }else{
             reject(res.msg || Messages.FAIL.DATA);
           }
         })
      })
    })
  }

    /**
     * 拉取基础数据库中的类别
     * @returns {Promise<any>}
     */
  getBaseCategory():Promise<any>{
      return new Promise((resolve,reject) =>{
          this.req.doPost({
              url:"baseGetCategory",
              success:(res =>{
                  if(res && res.code == 200){
                      resolve(res.data);
                  }else{
                      reject(res.msg || Messages.FAIL.DATA);
                  }
              })
          })
      })
  }

    /**
     * 查询基础库数据信息
     * @param params
     * @returns {Promise<any>}
     */
  getBasicList(params:any):Promise<any>{
    return new Promise((resolve,reject) =>{
      this.req.doPost({
          url:"baseListPage",
          data: params,
          success:(res =>{
            if(res && res.code == 200){
              resolve(res.data);
            }else{
              reject(res.msg || Messages.FAIL.DATA);
            }
          })
      })
    })
  }

    /**
     * 拉取对应的材料总览数据
      * @param params
     * @returns {Promise<any>}
     */
  getMaterialList(params:any):Promise<any>{
      return new Promise((resolve,reject) =>{
          this.req.doPost({
              url:"materialDetailQuery",
              data: params,
              success:(res =>{
                  if(res && res.code == 200){
                      resolve(res.data);
                  }else{
                      reject(res.msg || Messages.FAIL.DATA);
                  }
              })
          })
      })
  }


    /**
     * 根据不同类型的id拉取对应的品牌数据
     * @param {number} cid 类型id
     * @returns {Promise<any>}
     */
  getMasterBrand(cid:number):Promise<any>{
      return new Promise((resolve,reject) =>{
          this.req.doPost({
              url:"masterBrand",
              data:{id: cid},
              success:(res =>{
                  if(res && res.code == 200){
                      resolve(res.data);
                  }else{
                      reject(res.msg || Messages.FAIL.DATA);
                  }
              })
          })
      })
  }

}
