import { Component, OnInit } from '@angular/core';
import { atob } from '../../../../model/methods';
import { Router, ActivatedRoute } from '@angular/router';
import { auditStatus, Default } from './../../../../model/constant';
import { HttpHeaders, HttpParams, HttpClient } from '@angular/common/http';
import { ApiService } from '../../../../service/api.service';
import { RequestService } from '../../../../service/request.service';
import { WarningService } from '../../../../service/warning.service';
import { Messages } from '../../../../model/msg';
import { btoa } from '../../../../model/methods';
import { ThrowStmt } from '@angular/compiler';
@Component({
  selector: 'rev-supplier-material-info',
  templateUrl: './supplier-material-info.component.html',
  styleUrls: ['./supplier-material-info.component.scss']
})
export class SupplierMaterialInfoComponent implements OnInit {

  constructor(
    private router: Router,
    private activatedRoute: ActivatedRoute,
    private httpClient: HttpClient,
    private apiService: ApiService,
    private req: RequestService,
    private warn: WarningService,
  ) { }

  public pageNo: number = Default.PAGE.PAGE_NO;
  public pageSize: number = Default.PAGE.PAGE_SIZE;
  public total: number = Default.PAGE.PAGE_TOTAL;
  public title: string = '材料';
  public buttons: Array<any>;
  public showBtn = true;
  public showTitle = true;
  public pageType = 0;
  public brand = [];
  public serchs = {};
  public brandType = [{ id: 1, content: '全部数据' }];
  public type;
  public id;
  public ids = [];
  public checkedNumber;

  public materialType;
  public query;
  public httpOptions = {
    withCredentials: true
  };
  public isAllDisplayDataChecked: boolean;

  public indeterminate = false;
  public radioSwitch = [
    {
      key: 0,
      text: '已创建'
    },
    {
      key: 1,
      text: '审核中'
    },
    {
      key: 2,
      text: '已通过'
    },
    {
      key: 3,
      text: '未通过'
    },
  ];
  public materialList = [];
  ngOnInit() {
    this.materialType = auditStatus;
    this.buttons = [{
      name: '模板下载',
      link: '/rev/supplier/material/add',
      type: 'default'
    },
    {
      name: '新建导入',
      link: '/rev/supplier/material/add',
      type: 'default'
    },
    {
      name: '创建材料',
    }];
    this.activatedRoute.queryParams.subscribe(params => {
      if (params && params['name']) {
        this.title = params['name'];
        this.id = atob(params['id']);
      }
    });

    this.changeData();

  }

  btoa(id: string) {
    return btoa(id);
  }
  submit() {

  }
  // select(e) {
  //   this.brand = []
  //   this.brandType = [{ id: 1, content: '全部数据' }]
  //   if (e != 1) {
  //     // this.type=e['name'];
  //     this.getBrandList(e['id']).then(res => {
  //       // console.log(res)
  //       // res.forEach(v => {

  //       // });
  //       if (res) {
  //         this.brandType = [{ id: 1, content: '全部数据' }].concat(res)
  //       }

  //     })
  //   }
  // }
  // selectBrand(e) {

  // }
  // recall() {

  // }

  // getCategoryList() {
  //   this.req.doPost({
  //     url: 'getMarterialCategory',
  //     success: res => {
  //       if (res && res.code == 200) {
  //         this.renderDorpList(res.data);
  //       } else {
  //         this.warn.onError(res.msg || Messages.FAIL.DATA);
  //       }

  //     }
  //   })
  // }
  // renderDorpList(i) {

  //   if (i && i.length > 0) {
  //     this.materialType = new Array(i.length).fill({})
  //     let arr = []
  //     i.forEach((v, a) => {
  //       v['id'] = { name: v['categoryName'], key: v['number'], id: v['id'] }
  //       // v['key'] = v['id'];
  //       v['content'] = v['categoryName'];
  //       arr.push(v)
  //       // this.brandType[a]['children']=this.getBrandList(v['id'])
  //     });
  //     this.materialType = [{ id: 1, content: '全部数据' }].concat(arr)
  //   }


  // }
  // getBrandList(id) {
  //   return new Promise((resolve, reject) => {
  //     this.req.doPost({
  //       url: 'getMarterialBrand',
  //       data: {
  //         id: id
  //       },
  //       success: res => {
  //         resolve(this.renderBrandList(res.data))
  //       }
  //     })
  //   })
  // }
  // renderBrandList(i) {
  //   let arr = i
  //   arr.forEach(v => {
  //     v['id'] = v['number']
  //     v['content'] = v['brandName']
  //     // v['isLeaf'] = true
  //   });
  //   console.log(arr)
  //   return arr;
  // }

  handleFileChange(e) {
    const that = this;
    const files = e.target.files;
    const file = files[0];
    const formData = new FormData();
    formData.append('file', file);
    formData.append('versionType', '1');

    this.httpClient.post(this.apiService.getUrl('materialImportExcel'), formData, this.httpOptions)
      .subscribe(
        (res: any) => {
          console.log(res)
          if (res.code === 200) {
            that.warn.onSuccess(res.msg || Messages.SUCCESS.DATA);
            // that.loadData();
          } else {
            that.warn.onError(res.msg || Messages.FAIL.DATA);
          }
        },
        error => {
          that.warn.onWarn('请求失败');
        }
      );
    // this.uploadFile.nativeElement.value = '';
  }
  handleCategory(e) {
    this.type = e['categoryName']
    this.brand = [];
    this.changeData()
  }
  handleBrand(e) {
    this.brand = e;
    this.changeData()
  }
  handleSearch(e) {
    this.serchs = e;
    this.changeData()
  }
  checkSubmit() {
    return this.materialList.some(v => {
      return v['checked']
    })
  }
  changeIpt(e) {
    this.serchs = e;
  }
  handleName(e) {
    switch (e) {
      case '创建材料': this.router.navigate(['../edit'], { queryParams: { newMaterial: true, supplierId: btoa(this.id) }, relativeTo: this.activatedRoute });
        break;
      case '新建导入': document.getElementById('import').click();
        break;
      default:
        break;
    }
  }
  handleSwitch(e) {
    this.pageType = e;
    this.changeData();
  }
  apply(id) {
    let url
    if (this.pageType == 0) {
      url = 'submitMaterDetial'
    } else {
      url = 'submitMaterialRecall'
    }
    if (id) {
      this.ids.push(id)
    } else {
      this.materialList.forEach(v => {
        if (v['checked']) {
          this.ids.push(v['id']);
        }
      })
    }
    this.req.doPost({
      url: url,
      data: {
        materialList: this.ids,
      },
      success: res => {
        if (res.code === 200) {
          this.warn.onSuccess(res.msg || Messages.SUCCESS.DATA);
          this.changeData();
        } else {
          this.warn.onError(res.msg || Messages.FAIL.DATA);
        }

      }
    })
  }

  getNums(index) {
    let current = this.materialList[index];
    let next = this.materialList[index + 1];
    if (next) {
      if (current.spu === next.spu) {
        if (current["rows"]) {
          current["rows"] = current["rows"] + 1;
        } else {
          current["rows"] = 2;
        }
        next["rows"] = current["rows"];
        current["rows"] = 0;
      } else {
        if (!current["rows"]) {
          current["rows"] = 1;
        }
        if (!next["rows"]) {
          next["rows"] = 1;
        }
      }
    }
  }
  getNum() {
    this.checkedNumber = 0;
    this.materialList.forEach(v => {
      if (v['checked']) {
        this.checkedNumber += 1
      }
    })
  }
  refreshStatus() {

    const allChecked = this.materialList.every(value => value.checked === true);
    const allUnChecked = this.materialList.every(value => !value.checked);
    this.isAllDisplayDataChecked = allChecked;
    this.indeterminate = (!allChecked) && (!allUnChecked);
    this.getNum()

  }
  appPermission(data) {

  }
  checkAll(event) {
    if (event) {
      this.materialList.filter((item, i) => {
        item['checked'] = true;
      });
    } else {
      this.materialList.filter(item => {
        item['checked'] = false;
      });
    }
    this.indeterminate = false;
    this.getNum()
  }
  changeData(...arr) {
    let parm = { supplierId: this.id, pageSize: this.pageSize, pageNum: this.pageNo, status: this.pageType }
    if (this.serchs) {
      if (this.serchs['spu']) {
        parm['spu'] = this.serchs['spu'];
      }
      if (this.serchs['sku']) {
        parm['sku'] = this.serchs['sku'];
      }
      if (this.serchs['name']) {
        parm['name'] = this.serchs['name'];
      }
      if (this.serchs['spec']) {
        parm['spec'] = this.serchs['spec'];
      }
      if (this.serchs['model']) {
        parm['model'] = this.serchs['model'];
      }
    }

    let i = this.brand.indexOf(1)
    if (i > 0 || this.brand[0] == 1) {
      this.brand.splice(i, 1)
    }
    if (this.brand && this.brand.length > 0) {
      parm['brand'] = this.brand;
    }
    if (this.query) {
      parm['query'] = this.query;
    }
    if (this.type && this.type != 1) {
      parm['category'] = this.type;
    }
    this.req.doPost({
      url: 'detailMaterialList',
      data: parm,
      success: res => {
        if (res.code === 200) {
          this.materialList = res.data.list;
          this.materialList.forEach((v, i) => {
            this.getNums(i);
          })
          this.materialList.filter((v, i) => {
            v['checked'] = false;
          })
          this.checkedNumber = ''
          // this.brand=[];
          // this.type='';
          this.total = res.data.total;
          this.materialList = this.materialList.reverse();
          // that.loadData();
        } else {
          this.warn.onError(res.msg || Messages.FAIL.DATA);
        }
        console.log(res)
      }
    })
  }
}
