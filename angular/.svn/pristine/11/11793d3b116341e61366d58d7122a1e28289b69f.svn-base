import { Component, OnInit } from '@angular/core';
import { WarningService } from '../../../../service/warning.service';
import { RequestService } from '../../../../service/request.service';
import { Messages } from '../../../../model/msg';
import { Default } from '../../../../model/constant';
import { btoa } from '../../../../model/methods';
import { Router ,ActivatedRoute} from '@angular/router';
@Component({
    selector: 'rev-notice-material-list',
    templateUrl: './notice-material-list.component.html',
    styleUrls: ['./../notice-material.component.scss', './notice-material-list.component.scss']
})
export class NoticeMaterialListComponent implements OnInit {

    constructor(private request: RequestService,
        private router: Router,
        private activatedRoute: ActivatedRoute,
        private warn: WarningService) {
    }

    public materialQuery = '';
    public materialList: Array<any> = [];
    public title: string;

    public pageNo: number = Default.PAGE.PAGE_NO;
    public pageSize: number = Default.PAGE.PAGE_SIZE;
    public total: number = Default.PAGE.PAGE_TOTAL;
    public forms = [{
        type: "text",
        name: "name",
        value: null,
        placeholder: "通知标题",
        cols: 2
    },
    {
        type: "button",
        name: "search",
        text: "查询"
    },
    {
        type: "button",
        name: "newInfo",
        text: "新建素材"
    }]
    ngOnInit() {
        this.title = '通知素材库';
        this.loadSourceList();
    }
    handleForm(e: any) {
        console.log(e)
        if (e.name == this.forms[2].name) {
            this.newInfo();
        } else {
            let maps = e.value;
            if (maps && maps.size > 0) {
                this.materialQuery = maps.get('name');
            }
            this.loadSourceList(true);
        }
    }
    // 素材列表
    loadSourceList(...args) {
        const params = {};
        if (args && args.length > 0) {
            this.pageNo = Default.PAGE.PAGE_NO;
            params['title'] = this.materialQuery;
        }

        params['pageNum'] = this.pageNo;
        params['pageSize'] = this.pageSize;

        this.request.doPost({
            url: 'noticeSourceList',
            data: params,
            success: (res => {
                if (res && res.code == 200) {
                    this.materialList = res.data.list;
                    this.total = res.data.total;
                } else {
                    this.warn.onMsgError(res.msg || Messages.FAIL.DATA);
                }
            })
        });
    }
    newInfo() {
        window.open(window.location.href.replace(/list/g, `add`), '_blank');
        // this.router.navigate(['./../add'], { relativeTo: this.activatedRoute });
    }
    deleteMaterial(sourceId) {
        this.request.doPost({
            url: 'noticeSourceDel',
            data: {
                id: sourceId
            },
            success: (res => {
                if (res && res.code == 200) {
                    this.loadSourceList();
                } else {
                    this.warn.onMsgError(res.msg || Messages.FAIL.DATA);
                }
            })
        });
    }

    cancelMaterial(): void {
        // this.nzMessageService.info('click cancel');
    }
    btoa(id: string) {
        return btoa(id);
    }

}
