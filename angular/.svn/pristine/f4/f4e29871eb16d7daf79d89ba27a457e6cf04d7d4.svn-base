import { Component, OnInit } from '@angular/core';
import {Default} from '../../../../model/constant';
import {WarningService} from '../../../../service/warning.service';
import {Messages} from '../../../../model/msg';
import {FormBuilder, FormGroup,Validators} from '@angular/forms';
import { ActivatedRoute } from '@angular/router';
import {atob} from '../../../../model/methods';
import {TempBasicEditService} from "./temp-basic-edit.service";

@Component({
  selector: 'rev-temp-basic-edit',
  templateUrl: './temp-basic-edit.component.html',
  styleUrls: ['./temp-basic-edit.component.scss','./../temp-basic.component.scss']
})
export class TempBasicEditComponent implements OnInit {
    public detailState:number; // 基装版本state 1代表已上架
    public versionId: string; //基装版本详情id
    // 版本名称 备注 说明
    public versionName: string; //版本名称
    public remark: string;
    public note: string;

    //搜索
    public categoryList: any;
    public category: string;
    public projectName: string;
    
    public radioSwitch = [
		{
			key: 1,
			text: '已添加'
		},
		{
			key: 2,
			text: '未添加'
		}
    ];  
    public addNum = 0; // 已添加总数
	public state = 1; // 1已添加 2未添加

   
	// 修改title
	public editForm: FormGroup;
	public editVisible = false;
	public editName = '';
    public editRemark = '';
    public editNote = '';

    public checkedNumber :Array<any> = [] //选中的数据

	public pageNo = Default.PAGE.PAGE_NO;
    public pageSize = Default.PAGE.PAGE_SIZE;
    public total = Default.PAGE.PAGE_TOTAL;
    
    public materialList:Array<any> = []; // 表格数据
    public loading:boolean = false;
    public isAllDisplayDataChecked: boolean;
    public indeterminate = false;
    

    constructor(
        private warn: WarningService,
        private fb: FormBuilder,
        private activatedRoute: ActivatedRoute,
        private tempBasicEditService:TempBasicEditService,
	) { }

    ngOnInit() {
        this.activatedRoute.queryParams.subscribe(params => {
            if (params && params['id']) {
                this.versionId = atob(params.id);
				this.detailState = params.detailState;
                this.changeData();
            }
		});
		
		this.editForm = this.fb.group({
            editName: ['', [
                Validators.required,
                Validators.maxLength(30)
            ]],
            editRemark: ['', [
                Validators.maxLength(300)
            ]],
            editNote: ['', [
                Validators.maxLength(5000)
            ]]
        });
        this.getCategory();
	}
	
	/**
     *title的修改信息
     */
    showModal(name, ...args) {
        this.editVisible = true;
        this.editName = name;
        if (args && args.length > 0) {
            this.editRemark = args[0];
            this.editNote = args[1];
        }
	}
	
	/**
     * 修改title时的cancel
     */
    handleCancel() {
        this.editVisible = false;
    }

    /**
     * 修改title的ok
     */
    handleOk() {
        const that = this;
        if (that.editForm.value) {
            const params = {
                id:that.versionId
            }
            params['versionName'] = that.editForm.value['editName'].trim();
            if(that.editRemark){    
                params['remark'] = that.editForm.value['editRemark'].trim();
            }
            if(that.editNote){
                params['offerExplain'] = that.editForm.value['editNote'].trim();
            }
            this.tempBasicEditService.modifyTitle(params).then(data=>{
                that.handleCancel();
                that.versionName = params['versionName'];   
                that.remark =  params['remark'];
                that.note = params['offerExplain'];
                that.warn.onMsgSuccess(data || Messages.SUCCESS.DATA);
            }).catch(err=>{
                that.handleCancel();
                that.warn.onMsgError(err);
            })
        }
    }

    //获取分类
    getCategory() {
        this.tempBasicEditService.getCategory().then(data=>{
            this.categoryList = data;
        }).catch(err=>{
            this.warn.onMsgError(err);
        })
    }

    /* 已上架-未上架
     * @param 1已添加 2未添加
     */
	handleSwitch(e) {
        this.state = e;
        this.resetData();
    }
    
    //数据置为原始值域
    resetData(){
        this.pageNo = Default.PAGE.PAGE_NO;
        this.total = Default.PAGE.PAGE_TOTAL;
        this.indeterminate = false;
        this.isAllDisplayDataChecked = false;
        this.category = undefined;
        this.projectName = '';
        this.checkedNumber = [];
        this.changeData();
    }

   
    // 表格数据
    changeData(...args) {
        const that = this;
        if (args && args.length > 0) {
            this.pageNo = Default.PAGE.PAGE_NO;
        }
        const params = {
            id:this.versionId,
            pageNo: this.pageNo,
            type:this.state
        };
        if(this.category){
            params['category'] = this.category;
        }
        if(this.projectName){
            params['projectName'] = this.projectName;
        }
        this.tempBasicEditService.getVersionMouldInfoList(params).then(data=>{
            that.materialList = data.infoList.list;
            that.total = data.infoList.total;
            if(data.versipn){
                that.versionName = data.versipn.versionName
                that.remark = data.versipn.remark
                that.note = data.versipn.offerExplain
            }
            if(that.materialList){
                if(that.state == 1){
                    that.addNum = that.total;
                    if(that.addNum == 0){    
                        that.radioSwitch[0].text = '已添加'
                    }else{
                        that.radioSwitch[0].text = `已添加（${that.addNum}）`
                    }
                }
                /* if(that.state == 2){
                    for(var i = that.materialList.length - 1; i >= 0; i--){
                        if(that.materialList[i].state == 0){
                            that.materialList.splice(i,1);
                        }
                    }
                } */
                that.materialList.filter(v => {
                    v['checked'] = false;   
                });
            }
            that.isAllDisplayDataChecked = false;
            that.indeterminate = false;
        }).catch(err=>{
            this.warn.onError(err);
        })
    }

    // 翻页
    changePage(){
        this.checkedNumber = [];
        this.changeData();
    }

	//全选
	checkAll(e) {
        this.isAllDisplayDataChecked = e;
        this.materialList.forEach(item =>{
            item.checked = this.isAllDisplayDataChecked;
        })
        this.refreshStatus();
	}
	
	//单个选择
    refreshStatus() {
        const allChecked = this.materialList.every(value => value.checked === true);
        const allUnChecked = this.materialList.every(value => !value.checked);
        this.isAllDisplayDataChecked = allChecked;
        this.indeterminate = (!allChecked) && (!allUnChecked);
        this.checkedNumber = this.materialList.filter(value => value.checked);
    }

    //批量添加 删除
    opreateMaterial(str){
        const that = this;
        const params = {};
        let url = '';
        let detailIds = [];
        this.checkedNumber.forEach(item=>{
            detailIds.push(item.id)
        })
        if(str == 'add'){
            url = 'versionAddInfo';
            params['id'] = this.versionId;
        }else{
            url = 'versionDeleteInfo';
        }
        params['ids'] = detailIds
        if(this.versionId){
            this.tempBasicEditService.opreateMaterial(url,params).then(data=>{
                if(str == 'add'){
                    that.warn.onSuccess('添加成功');
                    that.addNum += Number(that.checkedNumber.length);
                    that.radioSwitch[0].text = `已添加（${that.addNum}）`;
                }else{
                    that.warn.onMsgSuccess(data || Messages.SUCCESS.DATA);
                }
                that.checkedNumber = [];
                that.changeData(true);
            }).catch(err=>{
                this.warn.onMsgError(err);
            })    
        }
    }

    // 全部添加
    addAll(){
        this.loading = true;
        this.tempBasicEditService.addAllInfo(this.versionId).then(data=>{
            this.loading = false;
            this.warn.onSuccess('添加成功');
            this.changeData(true);
            this.checkedNumber = [];
            this.addNum += Number(data);
            this.radioSwitch[0].text = `已添加（${this.addNum}）`;
        }).catch(err=>{
            this.loading = false;
            this.warn.onMsgError(err);
        })   
    }

    // 表格添加 删除
    handleOperate(str,item){
        const that = this;
        const params = {};
        let url = '';
        if(str == 'add'){
            url = 'versionAddInfo';
            params['id'] = this.versionId;
        }else{
            url = 'versionDeleteInfo';
        }
        params['ids'] = [item.id];

        if(this.versionId){
            this.tempBasicEditService.opreateMaterial(url,params).then(data=>{
                if(str == 'add'){
                    that.warn.onSuccess('添加成功');
                    that.addNum += 1
                    that.radioSwitch[0].text = `已添加（${that.addNum}）`
                }else{
                    that.warn.onMsgSuccess(data || Messages.SUCCESS.DATA);
                }
                that.changeData();
                that.checkedNumber = [];
            }).catch(err=>{
                this.warn.onMsgError(err);
            })
        }
    }
}
