import {Component, OnInit} from '@angular/core';
import {NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';
import {MasterPackService} from "../../rev/master/master-pack-detail/master-pack.service";
import {Default} from "../../model/constant";
import {getCompanyNameById} from "../../model/methods";

@Component({
    selector: 'rev-item-pack',
    templateUrl: './item-pack.component.html',
    styleUrls: ['./item-pack.component.scss']
})
export class ItemPackComponent implements OnInit {

    public pageNo: number = Default.PAGE.PAGE_NO;
    public pageSize: number = Default.PAGE.PAGE_SIZE_5;
    public total: number = Default.PAGE.PAGE_TOTAL;
    public packs:any;

    //所有供应商数据
    public companys:any;
    //材料商id
    public sid:number;
    //套系数据id
    public cbs:Array<number>;


    constructor(public modal: NgbActiveModal,
                private masterPack:MasterPackService) {
    }

    ngOnInit() {
        this.changeData();
    }




    selectMaterialSupplier(ms: any) {
        console.log("select ms is", ms);
    }

    selectCbs(cbs: any) {
        console.log("Select combos is", cbs);
        this.cbs = cbs;
    }

    selectCategory(cate: any) {
        console.log("select category is", cate);
    }

    selectBrand(bs: any) {
        console.log("brands all in here", bs);
    }

    selectSearch(info: any) {
        console.log("select search info is", info);
    }


    cancelModal() {
        this.modal.dismiss(null);
    }

    confirmModal(){
        this.modal.close(null);
    }


    changeData(){
        const params = {
            pageNum: this.pageNo,
            pageSize: this.pageSize,
            status: 3
        };

        if(this.cbs && this.cbs.length > 0){
            params["combos"] = this.cbs;
        }

        this.masterPack.getPackList(params).then(data =>{
            console.log("master pack data",data);
            this.packs = data && data.list?data.list:[];
            this.total = data && data.total?data.total:Default.PAGE.PAGE_TOTAL;
        })
    }

    /**
     * 根据供应商id获取供应商简称
     * @param {number} cid
     * @returns {any}
     */
    getCompanyName(cid:number){
        return getCompanyNameById(cid,this.companys);
    }

    //回调拉取的所有供应商数据
    getCompanies(cps:any){
        this.companys = cps;
    }

}
