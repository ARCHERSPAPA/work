import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { RequestService } from '../../../../service/request.service';
import { Default } from '../../../../model/constant';
import { WarningService } from '../../../../service/warning.service';
import { btoa, getStateName, getTypeName, getCostStateName } from '../../../../model/methods';
import { Router, ActivatedRoute } from '@angular/router';
import { UserService } from '../../../../service/user.service';
import {ArticleItemService} from "../article-item.service";


@Component({
    selector: 'rev-article-list',
    templateUrl: './article-list.component.html',
    styleUrls: ['./../../article.component.scss', './../../../detail/list.scss'],
})
export class ArticleListComponent implements OnInit {

    public title: string;
    public buttons: any;

    /**查询条件**/
    public pageNo: number = Default.PAGE.PAGE_NO;
    public total: number = Default.PAGE.PAGE_TOTAL;
    public pageSize: number = Default.PAGE.PAGE_SIZE;
    //查询条件
    // public name:string;
    // public phone:string;
    public type = '';
    public searchForm: FormGroup;
    public info = '';
    // public saveFlag: boolean;

    public departmentId: string;

    public articleList: any;
    //加载数据
    public loading = false;

    constructor(private request: RequestService,
        private warn: WarningService,
        private fb: FormBuilder,
        private router: Router,
        private user: UserService,
        private articleItem:ArticleItemService,
        private activatedRoute: ActivatedRoute) {
    }

    ngOnInit() {
        this.title = '项目列表';
        this.buttons = [
            {
                name: '新建项目',
                type: 'click',
                color: 'btn-primary',
                load: true,
            }
        ];
        this.searchForm = this.fb.group({
            // name:[this.name,[]],
            // phone:[this.phone,[]]
            info: [this.info, []]
        });

        this.activatedRoute.queryParams.subscribe((params) => {
            if (params) {
                if (params['page']) {
                    this.pageNo = params['page'] > 0 ? params['page'] : Default.PAGE.PAGE_NO;
                }
                if (params['type']) {
                    this.type = params['type'] ? params['type'] : '';
                }
                if (params['name']) {
                    this.info = params['name'] ? decodeURI(params['name']) : '';
                }
                this.changeData();
            }

        });

    }


    changeData() {
        const that = this;
        if (this.searchForm.valid) {
            const params = {
                page: that.pageNo,
                pageSize: that.pageSize
            };
            if (that.type) {
                params['type'] = that.type;
            }

            if (that.info) {
                params['name'] = that.info;
            }

            this.loading = true;
            this.articleItem.listItem(params).then(data =>{
                this.loading = false;
                this.articleList = data.list;
                this.total = data.total;
            }).catch(err =>{
                this.loading = false;
                this.warn.onMsgError(err);
            })
        }

    }

    // 搜索或下拉框
    searchData() {
        this.pageNo = Default.PAGE.PAGE_NO;
        this.changePage();
    }
    // 翻页
    changePage() {
        this.router.navigate(['./'], {
            queryParams: {
                page: this.pageNo,
                type: this.type,
                name: encodeURI(this.info)
            }, relativeTo: this.activatedRoute
        });
    }

    getTypeName(type) {
        return getTypeName(type);
    }

    getStateName(state,type) {
        if(type==1){
            return "已撤回"
        }
        return getStateName(state);
    }
    getCostState(state) {
        return getCostStateName(state);
    }

    /**
     * 实现优化新建临时的项目
     * @param e
     */
    handleName(e: any) {
        if(e === this.buttons[0].name){
            this.articleItem.createItem({userId: this.user.getId()}).then(data =>{
                this.router.navigate(['./../detail/dispatch', 4], {
                    queryParams: { cid: btoa(data.quoteBase["id"]) },
                    relativeTo: this.activatedRoute
                });
            }).catch(err =>{
                this.warn.onMsgError(err);
            })
        }
    }

    btoa(id: string) {
        return btoa(id);
    }

    deleteProject(id:number){
        if(id){
            this.articleItem.deleteItem(id).then(msg =>{
                this.warn.onMsgSuccess(msg);
                this.changeData();
            }).catch(err =>{
                this.warn.onModalInfo({
                    title:"温馨提示",
                    content: err,
                    ok:() =>{
                        console.log("回调成功");
                    }
                });
            })
        }
    }

}
