import {Component, OnInit} from '@angular/core';
import {Default, orderMaterialStatus} from "../../../model/constant";
import {Router, ActivatedRoute} from '@angular/router';
import {WarningService} from "../../../service/warning.service";
import {ArticleExceptionService} from "./article-exception.service";
import {getMaterialState, getOrderByType} from "../../../model/methods";
import {plus} from "../../../model/count";

@Component({
    selector: 'rev-article-exception',
    templateUrl: './article-exception.component.html',
    styleUrls: ['./article-exception.component.scss']
})
export class ArticleExceptionComponent implements OnInit {

    public title: string;
    public radioSwitch: Array<any> = [
        {
            key: 0,
            text: '待审核'
        },
        {
            key: 1,
            text: '已审核'
        }
    ];
    //初始化查询条件
    public forms: Array<any> = [
        {
            type: "select",
            name: "orderState",
            placeholder: "请选择订单状态",
            data: orderMaterialStatus,
            cols: 4,
            value: null
        },
        {
            type: "group",
            name: "group",
            placeholder: "请输入",
            data:[
                {label:"楼盘名称",value:0},
                {label:"客户",value:1},
                {label:"工长",value:2},
                {label:"材料订单编号",value:3}
            ],
            cols: 8,
            value: {
                select: 0,
                text: null
            }
        },
        {
            type: "button",
            text: "查询",
            name: "search",
            cols: 1
        }
    ];

    public pageNo: number = Default.PAGE.PAGE_NO;
    public pageSize: number = Default.PAGE.PAGE_SIZE;
    public total: number = Default.PAGE.PAGE_TOTAL;
    public loading: boolean = false;

    //查询订单状态
    public orderState:string;
    //审核订单状态
    public auditState:number;
    //楼盘名称
    public name:string;
    //客户
    public customerName:string;
    //工长
    public workerName:string;
    //订单编号
    public orderNo:string;

    //所有查询后的异常订单数据
    public excepts: any;

    constructor(private router: Router,
                private activatedRoute: ActivatedRoute,
                private warn: WarningService,
                private articleExpService: ArticleExceptionService) {
    }

    ngOnInit() {
        this.title = "异常审核";
        this.forms[0].value = this.forms[0].data[1];
        this.changeData();
    }


    handleSwitch(e) {
        console.log("audit state is",e);
        this.auditState = e;
        this.forms[1].value.select = this.forms[1].data[0].value;
        this.forms[1].value.text = null;
        this.cleanSelectInfo();
        this.cleanInputInfo();
        this.resetData();
    }

    handleForm(maps: any) {
        if (maps && maps.size > 0) {
            maps.forEach((map, key) => {
                console.log("map:", map);
                console.log("key: ", key);
            })
        }
    }

    handleSelect(e: any, name: string) {
        console.log("select value is", e);
        console.log("select name is", name);
    }

    resetData(){
        this.pageNo = Default.PAGE.PAGE_NO;
        this.changePage();
    }

    cleanInputInfo(){
        this.name = null;
        this.customerName = null;
        this.workerName = null;
        this.orderNo = null;
    }
    cleanSelectInfo(){
        this.orderState = null;
        this.forms[0].value = null;
    }


    //回退分页还原
    changePage(){
        this.router.navigate(['./'],
            {
                queryParams: {

                }, relativeTo: this.activatedRoute
            });
    }

    //拉取数据
    changeData() {
        let params = {
            page: this.pageNo,
            pageSize: this.pageSize
        };


        this.loading = true;
        this.articleExpService.getExpList(params)
            .then(data => {
                this.loading = false;
                this.excepts = data.list;
            })
            .catch(err => {
                this.loading = false;
                this.warn.onMsgError(err);
            })
    }


    //获取订单类型
    getOrderName(type:number){
        return getOrderByType(type);
    }

    getMaterialState(state:number){
        return getMaterialState(state);
    }

    computedTotal(total:number,fee:number){
        return Number(plus(total,fee));
    }

}
