{"version":3,"sources":["webpack:///E:/app/trunk/components/gaoyia-parse/components/wxParseTemplate11.vue?60ab","webpack:///E:/app/trunk/components/gaoyia-parse/components/wxParseTemplate11.vue?4b79","webpack:///E:/app/trunk/components/gaoyia-parse/components/wxParseTemplate11.vue?5152","webpack:///E:/app/trunk/components/gaoyia-parse/components/wxParseTemplate11.vue?b1d8","uni-app:///components/gaoyia-parse/components/wxParseTemplate11.vue"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8H;AAC9H;AACqE;AACL;;;AAGhE;AACoM;AACpM,gBAAgB,6MAAU;AAC1B,EAAE,uFAAM;AACR,EAAE,4FAAM;AACR,EAAE,qGAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,gGAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACtBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAswB,CAAgB,2xBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC4D1xB;AACA,2BADA;AAEA;AACA,0BADA;AAEA,8BAFA;AAGA,8BAHA;AAIA,8BAJA,EAFA;;AAQA;AACA,YADA,EARA;;AAWA;AACA,eADA,uBACA,IADA,EACA,CADA,EACA;;AAEA,UAFA;AAGA,6BAHA,CAEA,IAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA,KAXA,EAXA,E","file":"components/gaoyia-parse/components/wxParseTemplate11.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./wxParseTemplate11.vue?vue&type=template&id=72f8ca68&\"\nvar renderjs\nimport script from \"./wxParseTemplate11.vue?vue&type=script&lang=js&\"\nexport * from \"./wxParseTemplate11.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!D:\\\\HBuilderX.2.6.1.20200226.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\runtime\\\\componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"E:/app/trunk/components/gaoyia-parse/components/wxParseTemplate11.vue\"\nexport default component.exports","export * from \"-!D:\\\\HBuilderX.2.6.1.20200226.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\templateLoader.js??vue-loader-options!D:\\\\HBuilderX.2.6.1.20200226.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--16-0!D:\\\\HBuilderX.2.6.1.20200226.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\template.js!D:\\\\HBuilderX.2.6.1.20200226.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-uni-app-loader\\\\page-meta.js!D:\\\\HBuilderX.2.6.1.20200226.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX.2.6.1.20200226.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./wxParseTemplate11.vue?vue&type=template&id=72f8ca68&\"","var components\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!D:\\\\HBuilderX.2.6.1.20200226.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\HBuilderX.2.6.1.20200226.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--12-1!D:\\\\HBuilderX.2.6.1.20200226.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\HBuilderX.2.6.1.20200226.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX.2.6.1.20200226.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./wxParseTemplate11.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!D:\\\\HBuilderX.2.6.1.20200226.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\HBuilderX.2.6.1.20200226.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--12-1!D:\\\\HBuilderX.2.6.1.20200226.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\HBuilderX.2.6.1.20200226.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX.2.6.1.20200226.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./wxParseTemplate11.vue?vue&type=script&lang=js&\"","<template>\r\n  <!--判断是否是标签节点-->\r\n  <block v-if=\"node.node == 'element'\">\r\n    <!--button类型-->\r\n    <button v-if=\"node.tag == 'button'\" type=\"default\" size=\"mini\" :class=\"node.classStr\" :style=\"node.styleStr\">\r\n      <rich-text :nodes=\"node\" :class=\"node.classStr\" :style=\"'user-select:' + parseSelect\" />\r\n    </button>\r\n\r\n    <!--a类型-->\r\n    <view v-else-if=\"node.tag == 'a'\" :class=\"node.classStr\" :data-href=\"node.attr.href\" :style=\"node.styleStr\" @click=\"wxParseATap(node.attr,$event)\">\r\n      <block v-for=\"(node, index) of node.nodes\" :key=\"index\">\r\n        <rich-text :nodes=\"node\" :class=\"node.classStr\" :style=\"'user-select:' + parseSelect\" />\r\n      </block>\r\n    </view>\r\n\r\n    <!--li类型-->\r\n    <view v-else-if=\"node.tag == 'li'\" :class=\"node.classStr\" :style=\"node.styleStr\">\r\n      <block v-for=\"(node, index) of node.nodes\" :key=\"index\">\r\n        <rich-text :nodes=\"node\" :class=\"node.classStr\" :style=\"'user-select:' + parseSelect\" />\r\n      </block>\r\n    </view>\r\n\r\n    <!--table类型-->\r\n    <wx-parse-table v-else-if=\"node.tag == 'table'\" :class=\"node.classStr\" :style=\"node.styleStr\" :node=\"node\" />\r\n\r\n    <!--br类型-->\r\n    <!-- #ifndef H5 -->\r\n    <text v-else-if=\"node.tag == 'br'\">\\n</text>\r\n    <!-- #endif -->\r\n    <!-- #ifdef H5 -->\r\n    <br v-else-if=\"node.tag == 'br'\">\r\n    <!-- #endif -->\r\n\r\n    <!--video类型-->\r\n    <wx-parse-video v-else-if=\"node.tag == 'video'\" :node=\"node\" />\r\n\r\n    <!--audio类型-->\r\n    <wx-parse-audio v-else-if=\"node.tag == 'audio'\" :node=\"node\" />\r\n\r\n    <!--img类型-->\r\n    <wx-parse-img v-else-if=\"node.tag == 'img'\" :node=\"node\" />\r\n\r\n    <!--其他标签-->\r\n    <view v-else :class=\"node.classStr\" :style=\"node.styleStr\">\r\n      <block v-for=\"(node, index) of node.nodes\" :key=\"index\">\r\n        <rich-text :nodes=\"node\" :class=\"node.classStr\" :style=\"'user-select:' + parseSelect\" />\r\n      </block>\r\n    </view>\r\n  </block>\r\n\r\n  <!--判断是否是文本节点-->\r\n  <block v-else-if=\"node.node == 'text' \">{{ node.text }}</block>\r\n</template>\r\n\r\n<script>\r\nimport wxParseImg from './wxParseImg'\r\nimport wxParseVideo from './wxParseVideo'\r\nimport wxParseAudio from './wxParseAudio'\r\nimport wxParseTable from './wxParseTable'\r\n\r\nexport default {\r\n  name: 'WxParseTemplate11',\r\n  components: {\r\n    wxParseImg,\r\n    wxParseVideo,\r\n    wxParseAudio,\r\n    wxParseTable\r\n  },\r\n  props: {\r\n    node: {}\r\n  },\r\n  methods: {\r\n    wxParseATap(attr, e) {\r\n      const {\r\n        href\r\n      } = e.currentTarget.dataset\r\n      if (!href) return\r\n      let parent = this.$parent\r\n      while (!parent.preview || typeof parent.preview !== 'function') {\r\n        parent = parent.$parent\r\n      }\r\n      parent.navigate(href, e, attr)\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":""}